"('QNaN',)",[['QNaN']]
"('5.6',)",[['5.6']]
"('1996',)",[['1996']]
"('known', 'Summery')","[['known', 'Summery']]"
"('steps',)",[['steps']]
"('102.7',)",[['102.7']]
"('11', 'inf_o')","[['11', 'inf_o']]"
"('zero',)",[['zero']]
"('adding', 'integers')","[['adding', 'integers']]"
"('FP', 'basic')","[['FP', 'basic']]"
"('square-unit',)",[['square-unit']]
"('logic elements:',)",[['logic elements:']]
"('point unit', 'point')","[['point unit', 'point']]"
"('formats', 'extended', 'Basic')","[['extended', 'formats', 'Basic']]"
"('save hardware', 'pre-', 'time fmax')","[['save hardware', 'pre-', 'time fmax']]"
"('architecture',)",[['architecture']]
"('fraction',)",[['fraction']]
"('comparsion', 'FPU comparsion')","[['comparsion', 'FPU comparsion']]"
"('default', 'exactly')","[['default', 'exactly']]"
"('1.0010',)",[['1.0010']]
"('3.5',)",[['3.5']]
"('seen', 'sign bit', 'corresponding', 'given', 'depending')","[['corresponding', 'sign bit', 'depending', 'seen', 'given']]"
"('Invalid Operation',)",[['Invalid Operation']]
"('represent',)",[['represent']]
"('zA',)",[['zA']]
"('lies', 'cause', 'simply')","[['lies', 'cause', 'simply']]"
"('formula', 'understand', 'placeholder', 'sign')","[['formula', 'understand', 'placeholder'], ['formula', 'understand', 'sign'], ['placeholder', 'understand', 'sign']]"
"('transformed',)",[['transformed']]
"('priority', 'possible', 'VHDL', 'difficult')","[['priority', 'difficult', 'VHDL', 'possible']]"
"('ine_o', '= add,')","[['ine_o', '= add,']]"
"('Root',)",[['Root']]
"('011', '10')","[['011', '10']]"
"('importantly',)",[['importantly']]
"('opa_i',)",[['opa_i']]
"('operations', 'output', 'FPU operations:', 'start_i')","[['operations', 'FPU operations:', 'output'], ['operations', 'FPU operations:', 'start_i'], ['output', 'FPU operations:', 'start_i']]"
"('easily', 'code', 'disable', 'modifying', 'Future', 'connecting', 'units', 'instantiating', 'totally')","[['easily', 'units', 'Future', 'code'], ['easily', 'units', 'Future', 'modifying'], ['easily', 'units', 'Future', 'connecting'], ['easily', 'units', 'disable', 'instantiating'], ['easily', 'units', 'Future', 'totally'], ['code', 'Future', 'modifying'], ['code', 'Future', 'connecting'], ['code', 'Future', 'units', 'disable', 'instantiating'], ['code', 'Future', 'totally'], ['modifying', 'Future', 'connecting'], ['modifying', 'Future', 'units', 'disable', 'instantiating'], ['modifying', 'Future', 'totally'], ['connecting', 'Future', 'units', 'disable', 'instantiating'], ['connecting', 'Future', 'totally'], ['instantiating', 'disable', 'units', 'Future', 'totally']]"
"('represented', 'exact', 'faster')","[['represented', 'exact', 'faster']]"
"('exponent e',)",[['exponent e']]
"('+ infinity',)",[['+ infinity']]
"('3.2.2',)",[['3.2.2']]
"('differ', 'logic')","[['differ', 'logic']]"
"('Hardware', 'Hardware implementation')","[['Hardware', 'Hardware implementation']]"
"('status', 'encountered', 'status flag', 'five', 'bit status', 'defines')","[['five', 'encountered', 'defines', 'status', 'status flag', 'bit status']]"
"('Kahan',)",[['Kahan']]
"('situation', 'number representation', 'use fixed-point', 'way', 'etc')","[['situation', 'way', 'etc', 'number representation', 'use fixed-point']]"
"('ready', 'modes')","[['ready', 'modes']]"
"('base b=10,', 'base', 'choose')","[['base b=10,', 'base', 'choose']]"
"('3.3.4',)",[['3.3.4']]
"('better', 'table', 'stored')","[['table', 'better', 'stored']]"
"('also', 'radix', 'called')","[['radix', 'also', 'called']]"
"('1.11000010',)",[['1.11000010']]
"('multiple', 'saving')","[['multiple', 'saving']]"
"('operand', 'output_o', '32', 'fpu_op_i')","[['output_o', 'operand', '32'], ['output_o', 'operand', 'fpu_op_i'], ['32', 'operand', 'fpu_op_i']]"
"('rounded',)",[['rounded']]
"('multiplexer', 'elements')","[['multiplexer', 'elements']]"
"('using', 'make')","[['using', 'make']]"
"('Operation',)",[['Operation']]
"('specified',)",[['specified']]
"('1.1110',)",[['1.1110']]
"('4.1',)",[['4.1']]
"('000', '1.1001')","[['000', '1.1001']]"
"('unbiased', 'exponent')","[['unbiased', 'exponent']]"
"('Round',)",[['Round']]
"('Formats', '3.1')","[['Formats', '3.1']]"
"('26', '13')","[['26', '13']]"
"('Multiply',)",[['Multiply']]
"('starts', 'bit', 'significant', 'left')","[['bit', 'starts', 'left', 'significant']]"
"('base number',)",[['base number']]
"('mantissa', 'storage')","[['mantissa', 'storage']]"
"('multiply', 'calculate')","[['multiply', 'calculate']]"
"('Square', 'Square root:')","[['Square', 'Square root:']]"
"('often', 'Since', 'subtractions', 'area')","[['often', 'area', 'Since'], ['often', 'area', 'subtractions'], ['Since', 'area', 'subtractions']]"
"('nearest', 'Start signal', '= subtract,', 'overflow_o')","[['Start signal', 'nearest', 'overflow_o', '= subtract,']]"
"('Result',)",[['Result']]
"('mantissa m,',)","[['mantissa m,']]"
"('00', '001')","[['00', '001']]"
"('Synthesis',)",[['Synthesis']]
"('uninitialized', 'signal')","[['uninitialized', 'signal']]"
"('Input', 'Input signals:')","[['Input', 'Input signals:']]"
"('MHz', 'MHz operating')","[['MHz', 'MHz operating']]"
"('xml',)",[['xml']]
"('Contents',)",[['Contents']]
"('Million', 'reasons', 'fond', 'Modelsim', '2nd', 'flag', 'underflow flag', 'Worth')","[['fond', 'flag', 'Million', 'underflow flag', 'Modelsim'], ['fond', 'flag', 'reasons', '2nd'], ['fond', 'flag', 'Worth'], ['Modelsim', 'underflow flag', 'Million', 'flag', 'reasons', '2nd'], ['Modelsim', 'underflow flag', 'Million', 'flag', 'Worth'], ['2nd', 'reasons', 'flag', 'Worth']]"
"('signaling', 'types', 'quiet')","[['types', 'signaling', 'quiet']]"
"('handle', 'makes')","[['handle', 'makes']]"
"('compare', 'remainder')","[['compare', 'remainder']]"
"('listed', 'higher')","[['listed', 'higher']]"
"('Inexact',)",[['Inexact']]
"('35',)",[['35']]
"('283',)",[['283']]
"('floating', 'processing', 'complies')","[['processing', 'floating', 'complies']]"
"('leave', 'positions')","[['leave', 'positions']]"
"('society', 'computer', 'IEEE', '1985', '754')","[['society', '754', 'computer', 'IEEE'], ['society', '754', '1985'], ['IEEE', 'computer', '754', '1985']]"
"('needs', 'cost', 'arithmetic')","[['needs', 'arithmetic', 'cost']]"
"('show below:', 'wide', 'layout', 'show')","[['show below:', 'show', 'wide', 'layout']]"
"('say', 'add')","[['say', 'add']]"
"('2110', '1.0000')","[['2110', '1.0000']]"
"('919',)",[['919']]
"('thing', 'reduce', 'divider', 'precision', 'extra')","[['reduce', 'thing', 'extra', 'divider'], ['reduce', 'thing', 'extra', 'precision'], ['divider', 'extra', 'precision']]"
"('1530',)",[['1530']]
"('done', 'combine', 'although', 'unit')","[['done', 'unit', 'combine', 'although']]"
"('input', 'otherwise')","[['input', 'otherwise']]"
"('taken', 'instead', 'multiplier', 'approximately', 'times')","[['instead', 'taken', 'times', 'multiplier'], ['instead', 'taken', 'times', 'approximately'], ['multiplier', 'times', 'approximately']]"
"('division', 'multiplications', 'divisions')","[['division', 'divisions', 'multiplications']]"
"('10000', '00000')","[['10000', '00000']]"
"('= multiply,', 'underflow_o', 'round')","[['= multiply,', 'underflow_o', 'round']]"
"('Square Root',)",[['Square Root']]
"('Pro', 'FPGA')","[['Pro', 'FPGA']]"
"('binary', 'decimal', 'exponents')","[['decimal', 'binary', 'exponents']]"
"('Calculate',)",[['Calculate']]
"('occurs', 'Two')","[['occurs', 'Two']]"
"('representations', 'include', 'like', 'negative')","[['representations', 'negative', 'like', 'include']]"
"('give',)",[['give']]
"('1991', 'Scientist Should Know About', 'Every', 'Scientist Should Know')","[['Scientist Should Know About', '1991', 'Every'], ['Scientist Should Know About', '1991', 'Scientist Should Know'], ['Every', '1991', 'Scientist Should Know']]"
"('4.4',)",[['4.4']]
"('snan_o', '111')","[['snan_o', '111']]"
"('8.1', 'intended', 'synthesized')","[['8.1', 'intended', 'synthesized']]"
"('= divide,', 'div_zero_o')","[['= divide,', 'div_zero_o']]"
"('3.47', 'truncated', 'get truncated,', 'Basically', 'excess')","[['3.47', 'truncated', 'get truncated,'], ['3.47', 'truncated', 'Basically'], ['3.47', 'truncated', 'excess'], ['get truncated,', 'truncated', 'Basically'], ['get truncated,', 'truncated', 'excess'], ['Basically', 'truncated', 'excess']]"
"('12.1019', '1.0001', 'work', 'Another', 'digital', '34.0000')","[['12.1019', 'Another', 'work', '1.0001'], ['12.1019', 'Another', 'digital'], ['12.1019', 'Another', '34.0000'], ['1.0001', 'work', 'Another', 'digital'], ['1.0001', 'work', 'Another', '34.0000'], ['digital', 'Another', '34.0000']]"
"('small', 'written', 'made', 'top')","[['small', 'made', 'written', 'top']]"
"('zB',)",[['zB']]
"('defined', 'standard')","[['defined', 'standard']]"
"('giving', 'three')","[['giving', 'three']]"
"('Jidan Al-Eryani', 'Jidan', 'processing unit')","[['Jidan Al-Eryani', 'processing unit', 'Jidan']]"
"('Underflow',)",[['Underflow']]
"('different',)",[['different']]
"('fractions', 'Add')","[['fractions', 'Add']]"
"('10-45', '3.4', 'fixed', '1038', 'one')","[['10-45', 'one', '3.4', 'fixed'], ['10-45', 'one', '1038'], ['fixed', '3.4', 'one', '1038']]"
"('bits', 'groups', 'comes')","[['bits', 'comes', 'groups']]"
"('last', 'take', 'back')","[['last', 'back', 'take']]"
"('Exceptions', '3.2')","[['Exceptions', '3.2']]"
"('result', 'Not-a-Number')","[['result', 'Not-a-Number']]"
"('2.5',)",[['2.5']]
"('mentioning', 'supposedly', 'miscellaneous', 'bench', 'FPU', 'differently', 'choosing', 'bugs')","[['mentioning', 'bench', 'supposedly'], ['mentioning', 'bench', 'miscellaneous'], ['mentioning', 'bench', 'choosing', 'FPU'], ['mentioning', 'bench', 'differently'], ['mentioning', 'bench', 'bugs'], ['supposedly', 'bench', 'miscellaneous'], ['supposedly', 'bench', 'choosing', 'FPU'], ['supposedly', 'bench', 'differently'], ['supposedly', 'bench', 'bugs'], ['miscellaneous', 'bench', 'choosing', 'FPU'], ['miscellaneous', 'bench', 'differently'], ['miscellaneous', 'bench', 'bugs'], ['FPU', 'choosing', 'bench', 'differently'], ['FPU', 'choosing', 'bench', 'bugs'], ['differently', 'bench', 'bugs']]"
"('happens', 'every', 'However', 'SNaN string otherwise')","[['happens', 'However', 'every'], ['happens', 'However', 'SNaN string otherwise'], ['every', 'However', 'SNaN string otherwise']]"
"('following', 'supports')","[['following', 'supports']]"
"('normalized', 'else')","[['normalized', 'else']]"
"('3.2.3',)",[['3.2.3']]
"('format is:', 'single-precision')","[['format is:', 'single-precision']]"
"('sometimes', 'turned', 'temporally', 'guard', 'mode', 'infinite', 'holders', 'ever')","[['temporally', 'sometimes', 'ever', 'guard'], ['temporally', 'sometimes', 'mode'], ['temporally', 'sometimes', 'turned', 'infinite'], ['temporally', 'sometimes', 'holders'], ['guard', 'ever', 'sometimes', 'mode'], ['guard', 'ever', 'sometimes', 'turned', 'infinite'], ['guard', 'ever', 'sometimes', 'holders'], ['mode', 'sometimes', 'turned', 'infinite'], ['mode', 'sometimes', 'holders'], ['infinite', 'turned', 'sometimes', 'holders']]"
"('larger',)",[['larger']]
"('signals', 'Output', 'Output signals:')","[['signals', 'Output', 'Output signals:']]"
"('1.1100',)",[['1.1100']]
"('3.2.4',)",[['3.2.4']]
"('6.17',)",[['6.17']]
"('decreased', 'amount', 'effecting', 'reduced')","[['effecting', 'amount', 'decreased', 'reduced']]"
"('Meeting', 'run', 'able', 'goals')","[['able', 'Meeting', 'run', 'goals']]"
"('2100', '0.0011')","[['2100', '0.0011']]"
"('discussed',)",[['discussed']]
"('QNaN exception:',)",[['QNaN exception:']]
"('Overflow',)",[['Overflow']]
"('subtract', 'square root,')","[['subtract', 'square root,']]"
"('Square-Root',)",[['Square-Root']]
"('00000000',)",[['00000000']]
"('Signal', 'Name', 'Signal Name')","[['Name', 'Signal', 'Signal Name']]"
"('even', 'Start')","[['even', 'Start']]"
"('Width', 'clk_i')","[['Width', 'clk_i']]"
"('hand',)",[['hand']]
"('Addition', 'Number')","[['Addition', 'Number']]"
"('divide-by-zero exception', 'divide-by-zero')","[['divide-by-zero exception', 'divide-by-zero']]"
"('demonstrate', 'divide')","[['demonstrate', 'divide']]"
"('outlined', 'sections', 'commented', 'see')","[['outlined', 'commented', 'sections'], ['outlined', 'commented', 'see'], ['sections', 'commented', 'see']]"
"('Binary', 'Standard')","[['Binary', 'Standard']]"
"('infinitely', 'halfway')","[['infinitely', 'halfway']]"
"('Windows', 'Distiller', '7.0', 'Acrobat Distiller')","[['Windows', 'Distiller', '7.0'], ['Windows', 'Distiller', 'Acrobat Distiller'], ['7.0', 'Distiller', 'Acrobat Distiller']]"
"('according',)",[['according']]
"('wanted', 'saved')","[['wanted', 'saved']]"
"('Test', 'verification', '4.3')","[['Test', '4.3', 'verification']]"
"('Division', '12')","[['Division', '12']]"
"('serial', 'cycles', 'done serial', 'parallel', 'Disadvantage')","[['serial', 'parallel', 'cycles', 'done serial'], ['serial', 'parallel', 'Disadvantage'], ['done serial', 'cycles', 'parallel', 'Disadvantage']]"
"('doesnt', 'double-precision', 'concern')","[['doesnt', 'double-precision', 'concern']]"
"('II v.5',)",[['II v.5']]
"('10000001', '0.5')","[['10000001', '0.5']]"
"('towards', 'opposite')","[['towards', 'opposite']]"
"('precise', 'precise results,')","[['precise', 'precise results,']]"
"('lowering', 'enable', 'dividing', 'decreases', 'Decreasing', 'speed')","[['lowering', 'enable', 'dividing'], ['lowering', 'enable', 'decreases'], ['lowering', 'enable', 'Decreasing'], ['lowering', 'enable', 'speed'], ['dividing', 'enable', 'decreases'], ['dividing', 'enable', 'Decreasing'], ['dividing', 'enable', 'speed'], ['decreases', 'enable', 'Decreasing'], ['decreases', 'enable', 'speed'], ['Decreasing', 'enable', 'speed']]"
"('exceeds', 'maximum', 'operands')","[['exceeds', 'operands', 'maximum']]"
"('files', 'compiled', 'order')","[['compiled', 'files', 'order']]"
"('diagram', 'flow diagram', 'complex', 'flow', 'subtracting')","[['flow diagram', 'flow', 'complex', 'diagram', 'subtracting']]"
"('important', 'compared', 'parameters')","[['compared', 'important', 'parameters']]"
"('multiplication', 'numbers', 'differentiate')","[['numbers', 'multiplication', 'differentiate']]"
"('less',)",[['less']]
"('exponent and/or', 'exception', 'precision range')","[['exponent and/or', 'exception', 'precision range']]"
"('please', 'much', 'algorithms', 'detail')","[['please', 'much', 'detail', 'algorithms']]"
"('whenever', 'denormalization', 'inexact', 'tininess')","[['whenever', 'tininess', 'denormalization'], ['whenever', 'tininess', 'inexact'], ['denormalization', 'tininess', 'inexact']]"
"('want',)",[['want']]
"('added', 'occurred')","[['added', 'occurred']]"
"('clock signal', 'opb_i')","[['clock signal', 'opb_i']]"
"('four', 'shifted', '0.0010')","[['shifted', 'four', '0.0010']]"
"('2006', 'Copyright')","[['2006', 'Copyright']]"
"('operation', 'invalid')","[['operation', 'invalid']]"
"('24', 'eL', '22', 'eS')","[['eL', '24', '22'], ['eL', '24', 'eS'], ['22', '24', 'eS']]"
"('right', 'equal')","[['right', 'equal']]"
"('square', 'root', 'sign bit:')","[['square', 'root', 'sign bit:']]"
"('fully', 'allows')","[['fully', 'allows']]"
"('done parallel', 'save', 'save clock', 'clock cycles,')","[['done parallel', 'save', 'save clock'], ['done parallel', 'save', 'clock cycles,'], ['save clock', 'save', 'clock cycles,']]"
"('34',)",[['34']]
"('rounding',)",[['rounding']]
"('3.2.6', 'Infinity')","[['3.2.6', 'Infinity']]"
"('Addition unit:',)",[['Addition unit:']]
"('hardware', 'square-root algorithm', 'square-root', 'algorithm')","[['square-root algorithm', 'hardware', 'square-root'], ['square-root algorithm', 'hardware', 'algorithm'], ['square-root', 'hardware', 'algorithm']]"
"('increase', 'root operation', 'clock')","[['increase', 'root operation', 'clock']]"
"('brought', 'come')","[['brought', 'come']]"
"('verify', 'used', 'Thats')","[['verify', 'used', 'Thats']]"
"('result precision',)",[['result precision']]
"('2140',)",[['2140']]
"('3.3.2', 'Round-to-Zero')","[['3.3.2', 'Round-to-Zero']]"
"('actual', 'help', 'leading', 'actually', 'bias', 'therefore', 'whole', 'implicit')","[['help', 'whole', 'therefore', 'leading'], ['help', 'whole', 'therefore', 'actually'], ['help', 'whole', 'therefore', 'bias'], ['help', 'whole', 'therefore', 'actual', 'implicit'], ['leading', 'therefore', 'actually'], ['leading', 'therefore', 'bias'], ['leading', 'therefore', 'actual', 'implicit'], ['actually', 'therefore', 'bias'], ['actually', 'therefore', 'actual', 'implicit'], ['bias', 'therefore', 'actual', 'implicit']]"
"('Floating',)",[['Floating']]
"('010', '01')","[['010', '01']]"
"('fmax',)",[['fmax']]
"('928',)",[['928']]
"('needed', 'Logic')","[['needed', 'Logic']]"
"('Synplify', 'Cyclone', 'v.5', 'II', 'Synplify Pro')","[['v.5', 'Synplify', 'Synplify Pro', 'Cyclone', 'II']]"
"('Value',)",[['Value']]
"('unused', '101', 'zero_o')","[['unused', '101', 'zero_o']]"
"('0.0001', 'remember', 'yield', 'number')","[['0.0001', 'number', 'remember'], ['0.0001', 'number', 'yield'], ['remember', 'number', 'yield']]"
"('shown below:',)",[['shown below:']]
"('fracB',)",[['fracB']]
"('replaced', 'multipliers')","[['replaced', 'multipliers']]"
"('regard', 'detect', 'signaled')","[['detect', 'regard', 'signaled']]"
"('including',)",[['including']]
"('Fraction',)",[['Fraction']]
"('3.2.5',)",[['3.2.5']]
"('internally', 'sticky')","[['internally', 'sticky']]"
"('may', 'addition')","[['may', 'addition']]"
"('Zero', '3.2.7')","[['Zero', '3.2.7']]"
"('qnan_o', '110')","[['qnan_o', '110']]"
"('powers', 'away', '0.01', 'commercial')","[['away', 'powers', 'commercial', '0.01']]"
"('3.2.1', 'Invalid')","[['3.2.1', 'Invalid']]"
"('100',)",[['100']]
"('3.3.3', 'Round-Up')","[['3.3.3', 'Round-Up']]"
"('easy',)",[['easy']]
"('Loss', 'loss', 'underflow', 'implementer', 'choice', 'detected', 'time', 'implemented', 'events', 'Tininess', 'accuracy')","[['Loss', 'time', 'Tininess', 'loss'], ['Loss', 'time', 'Tininess', 'underflow'], ['Loss', 'time', 'implementer'], ['Loss', 'time', 'choice'], ['Loss', 'time', 'detected'], ['Loss', 'time', 'implemented'], ['Loss', 'time', 'events'], ['Loss', 'time', 'accuracy'], ['loss', 'Tininess', 'underflow'], ['loss', 'Tininess', 'time', 'implementer'], ['loss', 'Tininess', 'time', 'choice'], ['loss', 'Tininess', 'time', 'detected'], ['loss', 'Tininess', 'time', 'implemented'], ['loss', 'Tininess', 'time', 'events'], ['loss', 'Tininess', 'time', 'accuracy'], ['underflow', 'Tininess', 'time', 'implementer'], ['underflow', 'Tininess', 'time', 'choice'], ['underflow', 'Tininess', 'time', 'detected'], ['underflow', 'Tininess', 'time', 'implemented'], ['underflow', 'Tininess', 'time', 'events'], ['underflow', 'Tininess', 'time', 'accuracy'], ['implementer', 'time', 'choice'], ['implementer', 'time', 'detected'], ['implementer', 'time', 'implemented'], ['implementer', 'time', 'events'], ['implementer', 'time', 'accuracy'], ['choice', 'time', 'detected'], ['choice', 'time', 'implemented'], ['choice', 'time', 'events'], ['choice', 'time', 'accuracy'], ['detected', 'time', 'implemented'], ['detected', 'time', 'events'], ['detected', 'time', 'accuracy'], ['implemented', 'time', 'events'], ['implemented', 'time', 'accuracy'], ['events', 'time', 'accuracy']]"
"('digits', 'real', 'could', 'use', 'systems')","[['digits', 'systems', 'real'], ['digits', 'systems', 'could', 'use'], ['real', 'systems', 'could', 'use']]"
"('test', 'source', 'boundary', 'test bench')","[['source', 'test', 'boundary'], ['source', 'test', 'test bench'], ['boundary', 'test', 'test bench']]"
"('NaN',)",[['NaN']]
"('SNaN string', 'SNaN', 'SNaN exception')","[['SNaN string', 'SNaN', 'SNaN exception']]"
"('11000',)",[['11000']]
"('Point Unit', '36', 'Unit', 'Point')","[['Point Unit', 'Point', '36', 'Unit']]"
"('implementation', 'behind', 'explain', 'describe', 'theory')","[['behind', 'theory', 'implementation', 'explain', 'describe']]"
"('Nr',)",[['Nr']]
"('Lets', 'two')","[['Lets', 'two']]"
"('Compilation', '4.2')","[['Compilation', '4.2']]"
"('diff', 'exponent diff')","[['diff', 'exponent diff']]"
"('Multiplication unit:',)",[['Multiplication unit:']]
"('produced', 'Electronics', 'Electrical', 'Although', 'Engineers')","[['produced', 'Electrical', 'Electronics'], ['produced', 'Electrical', 'Although'], ['produced', 'Electrical', 'Engineers'], ['Electronics', 'Electrical', 'Although'], ['Electronics', 'Electrical', 'Engineers'], ['Although', 'Electrical', 'Engineers']]"
"('Multiplication',)",[['Multiplication']]
"('0.1', 'brings', 'problems', 'financial', 'thought')","[['0.1', 'financial', 'problems'], ['0.1', 'financial', 'brings', 'thought'], ['problems', 'financial', 'brings', 'thought']]"
"('684',)",[['684']]
"('accurate', 'left-shift', 'lets')","[['accurate', 'lets', 'left-shift']]"
"('explained', '127')","[['explained', '127']]"
"('1.7', '17')","[['1.7', '17']]"
"('specifies',)",[['specifies']]
"('Total', '4387')","[['Total', '4387']]"
"('FP numbers:',)",[['FP numbers:']]
"('eO',)",[['eO']]
"('00000001',)",[['00000001']]
"('3.3.1',)",[['3.3.1']]
"('smallest',)",[['smallest']]
"('exceptions', 'non', 'handling')","[['exceptions', 'handling', 'non']]"
"('Subtraction',)",[['Subtraction']]
"('Rounding', 'Modes', '3.3')","[['Rounding', '3.3', 'Modes']]"
"('never', 'set')","[['never', 'set']]"
"('applications', 'cannot', 'Using', 'fractional')","[['Using', 'cannot', 'applications', 'fractional']]"
"('bin', 'b0-23')","[['bin', 'b0-23']]"
"('biased', 'values', 'special')","[['biased', 'special', 'values']]"
"('without', 'results')","[['without', 'results']]"
"('due',)",[['due']]
"('= sign',)",[['= sign']]
"('count',)",[['count']]
"('Step',)",[['Step']]
"('ease', 'window', 'scale', 'solution')","[['ease', 'solution', 'window'], ['ease', 'solution', 'scale'], ['window', 'solution', 'scale']]"
"('889', '259', 'another')","[['889', '259', 'another']]"
"('provided', 'within')","[['provided', 'within']]"
"('positive', 'except', 'always')","[['positive', 'always', 'except']]"
"('fracA',)",[['fracA']]
"('save logic', 'output multiplexer', 'multiplexer code,')","[['save logic', 'output multiplexer', 'multiplexer code,']]"
"('Altera Quartus II', 'Altera Quartus II v.5', 'Altera Quartus')","[['Altera Quartus II', 'Altera Quartus II v.5', 'Altera Quartus']]"
"('storage holders,',)","[['storage holders,']]"
"('*3468', 'Usselmann')","[['*3468', 'Usselmann']]"
"('representation', 'example')","[['representation', 'example']]"
"('would',)",[['would']]
"('detect faster',)",[['detect faster']]
"('achieved', 'successfully', 'beginning', 'stated')","[['achieved', 'successfully', 'beginning', 'stated']]"
"('7392', 'Cycles', 'Clock Cycles', 'Clock')","[['Clock Cycles', '7392', 'Cycles', 'Clock']]"
"('Without',)",[['Without']]
"('subtraction',)",[['subtraction']]
"('stages',)",[['stages']]
"('Conversions', 'strings', 'format')","[['Conversions', 'format', 'strings']]"
"('Introduction',)",[['Introduction']]
"('Al-Eryani',)",[['Al-Eryani']]
"('cases',)",[['cases']]
"('efficient', 'calculated', 'iterative', 'fast', 'need', 'implementations', 'loops', 'divisors')","[['efficient', 'calculated', 'divisors', 'implementations', 'iterative', 'fast', 'need'], ['efficient', 'calculated', 'divisors', 'implementations', 'loops'], ['need', 'fast', 'iterative', 'implementations', 'loops']]"
"('Worth mentioning', 'Million test')","[['Worth mentioning', 'Million test']]"
"('Conclusion',)",[['Conclusion']]
"('divided', 'components')","[['divided', 'components']]"
"('process', 'serially', 'schools', 'taught')","[['serially', 'process', 'schools'], ['serially', 'process', 'taught'], ['schools', 'process', 'taught']]"
"('QNaN string',)",[['QNaN string']]
"('supported',)",[['supported']]
"('necessary', 'normal')","[['necessary', 'normal']]"
"('0.0100',)",[['0.0100']]
"('vectors', '14')","[['vectors', '14']]"
"('VHDL code,', 'detail please')","[['VHDL code,', 'detail please']]"
"('NA',)",[['NA']]
"('Interface',)",[['Interface']]
"('round-up',)",[['round-up']]
"('pipelining', 'throughput', 'reach')","[['pipelining', 'throughput', 'reach']]"
"('project', 'dependent', 'width', 'basic-', 'doesnt concern')","[['width', 'dependent', 'project', 'basic-', 'doesnt concern']]"
"('IEP1C6Q240C6', 'Quartus', 'FPUs', 'Cyclone IEP1C6Q240C6', 'Quartus II', 'Quartus II v.5')","[['FPUs', 'IEP1C6Q240C6', 'Quartus', 'Cyclone IEP1C6Q240C6', 'Quartus II', 'Quartus II v.5']]"
"('Institute', 'common', 'define')","[['Institute', 'common', 'define']]"
"('whenever tininess', 'denormalization loss', 'underflow exception', 'exception whenever')","[['whenever tininess', 'underflow exception', 'denormalization loss'], ['whenever tininess', 'underflow exception', 'exception whenever'], ['denormalization loss', 'underflow exception', 'exception whenever']]"
"('1.4', 'losing')","[['1.4', 'losing']]"
"('independent', 'chip', 'since')","[['independent', 'chip', 'since']]"
"('Acrobat PDFMaker', 'Word', 'Acrobat', 'PDFMaker')","[['Word', 'Acrobat', 'Acrobat PDFMaker', 'PDFMaker']]"
"('Step1', 'get')","[['Step1', 'get']]"
"('Square-root unit:', 'Square-root')","[['Square-root unit:', 'Square-root']]"
"('exponent range', 'maximum value', 'range', 'infinity', 'doesnt trigger')","[['exponent range', 'infinity', 'maximum value'], ['exponent range', 'infinity', 'range'], ['exponent range', 'infinity', 'doesnt trigger'], ['maximum value', 'infinity', 'range'], ['maximum value', 'infinity', 'doesnt trigger'], ['range', 'infinity', 'doesnt trigger']]"
"('Divide',)",[['Divide']]
"('whole range', '-27', 'exponent placeholder,', 'fraction bit')","[['whole range', '-27', 'exponent placeholder,'], ['whole range', '-27', 'fraction bit'], ['exponent placeholder,', '-27', 'fraction bit']]"
"('QNaN exception', 'shall')","[['QNaN exception', 'shall']]"
"('Computer', 'David', 'Scientist', 'Goldberg', 'Know', 'Arithmetic')","[['David', 'Arithmetic', 'Goldberg'], ['David', 'Arithmetic', 'Scientist', 'Computer', 'Know'], ['Goldberg', 'Arithmetic', 'Scientist', 'Computer', 'Know']]"
"('integer',)",[['integer']]
"('current', 'modular', 'designed', 'core')","[['modular', 'current', 'designed'], ['modular', 'current', 'core'], ['designed', 'current', 'core']]"
"('restricted', 'overflow', 'trigger', 'overflow exception')","[['restricted', 'overflow', 'trigger', 'overflow exception']]"
"('1.1101',)",[['1.1101']]
"('Top unit:', 'Top', '326')","[['Top unit:', 'Top', '326']]"
"('Division unit:',)",[['Division unit:']]
"('hardware area',)",[['hardware area']]
"('value',)",[['value']]
"('Altera',)",[['Altera']]
"('string', 'subject')","[['string', 'subject']]"
"('Subtract',)",[['Subtract']]
"('ready_o', 'rmode_i', 'Description')","[['ready_o', 'Description', 'rmode_i']]"
"('Single precision', 'Single')","[['Single precision', 'Single']]"
"('Rounded',)",[['Rounded']]
"('post-normalization unit',)",[['post-normalization unit']]
"('fracO',)",[['fracO']]
"('frequency', 'MHz operating frequency', 'operating')","[['frequency', 'MHz operating frequency', 'operating']]"
"('open', 'presented')","[['open', 'presented']]"
"('zeros',)",[['zeros']]
"('11111111',)",[['11111111']]
"('shown', 'lot')","[['shown', 'lot']]"
"('shift', 'smaller', 'us', 'gives')","[['shift', 'smaller', 'us', 'gives']]"
"('tested', 'verified')","[['tested', 'verified']]"
