"('tested', 'compliant')","[['tested', 'compliant']]"
"('shifted', 'siq', 'siq shifted intermediate quotient', 'shifted intermediate', 'siq shifted', 'siq shifted intermediate', 'shifted intermediate quotient', 'intermediate quotient')","[['shifted', 'shifted intermediate', 'siq shifted', 'siq', 'siq shifted intermediate', 'siq shifted intermediate quotient'], ['shifted', 'shifted intermediate', 'siq shifted', 'siq', 'shifted intermediate quotient', 'intermediate quotient'], ['siq shifted intermediate quotient', 'siq shifted intermediate', 'siq', 'shifted intermediate quotient', 'intermediate quotient']]"
"('final',)",[['final']]
"('divisor',)",[['divisor']]
"('available', 'overflow flag', 'dbzf', 'every', 'clock')","[['available', 'every', 'clock', 'overflow flag', 'dbzf']]"
"('made', 'reliable', 'parameterized', 'architectures', 'easy', 'arbitrary', 'flexible', 'size', 'combined')","[['made', 'flexible', 'architectures', 'parameterized'], ['made', 'flexible', 'easy'], ['made', 'flexible', 'architectures', 'arbitrary'], ['made', 'flexible', 'reliable', 'size'], ['made', 'flexible', 'combined'], ['parameterized', 'architectures', 'flexible', 'easy'], ['parameterized', 'architectures', 'arbitrary'], ['parameterized', 'architectures', 'flexible', 'reliable', 'size'], ['parameterized', 'architectures', 'flexible', 'combined'], ['easy', 'flexible', 'architectures', 'arbitrary'], ['easy', 'flexible', 'reliable', 'size'], ['easy', 'flexible', 'combined'], ['arbitrary', 'architectures', 'flexible', 'reliable', 'size'], ['arbitrary', 'architectures', 'flexible', 'combined'], ['size', 'reliable', 'flexible', 'combined']]"
"('ip core implementation', 'implementation', 'core implementation support', 'core implementation', 'implementation support')","[['ip core implementation', 'core implementation', 'core implementation support', 'implementation', 'implementation support']]"
"('full test', 'precision support', 'full dfp accuracy')","[['full test', 'precision support', 'full dfp accuracy']]"
"('quotient trailing', 'quotient trailing zeros', 'qtz quotient trailing', 'qtz', 'qtz quotient', 'qtz quotient trailing zeros')","[['quotient trailing', 'qtz', 'quotient trailing zeros'], ['quotient trailing', 'qtz', 'qtz quotient'], ['quotient trailing', 'qtz', 'qtz quotient trailing', 'qtz quotient trailing zeros'], ['quotient trailing zeros', 'qtz', 'qtz quotient'], ['quotient trailing zeros', 'qtz', 'qtz quotient trailing', 'qtz quotient trailing zeros'], ['qtz quotient', 'qtz', 'qtz quotient trailing', 'qtz quotient trailing zeros']]"
"('sa dividend', 'significand', 'riq sa dividend significand', 'riq sa dividend', 'sa dividend significand', 'www.silminds.com', 'riq sa', 'sa', 'output flags,')","[['sa dividend', 'significand', 'sa', 'riq sa dividend', 'riq sa dividend significand'], ['sa dividend', 'significand', 'sa', 'sa dividend significand'], ['sa dividend', 'significand', 'output flags,', 'www.silminds.com'], ['sa dividend', 'significand', 'riq sa'], ['riq sa dividend significand', 'riq sa dividend', 'sa', 'sa dividend significand'], ['riq sa dividend significand', 'riq sa dividend', 'sa', 'significand', 'output flags,', 'www.silminds.com'], ['riq sa dividend significand', 'riq sa dividend', 'sa', 'significand', 'riq sa'], ['sa dividend significand', 'sa', 'significand', 'output flags,', 'www.silminds.com'], ['sa dividend significand', 'sa', 'significand', 'riq sa'], ['www.silminds.com', 'output flags,', 'significand', 'riq sa']]"
"('input', 'special')","[['input', 'special']]"
"('diagram', 'symbol', 'block diagram', 'block')","[['symbol', 'diagram', 'block', 'block diagram']]"
"('verified', 'benches')","[['verified', 'benches']]"
"('encoding', 'processors', 'densely', 'next')","[['densely', 'encoding', 'processors', 'next']]"
"('compliance', 'full ieee')","[['compliance', 'full ieee']]"
"('rm', 'synthesis', 'scripts', 'inputs')","[['rm', 'inputs', 'synthesis', 'scripts']]"
"('cases', 'environments')","[['cases', 'environments']]"
"('71.11', 'test bench', 'bench')","[['test bench', '71.11', 'bench']]"
"('newton-raphson',)",[['newton-raphson']]
"('required',)",[['required']]
"('included', 'items', 'type', 'licensing', 'following')","[['items', 'included', 'licensing'], ['items', 'included', 'type', 'following'], ['licensing', 'included', 'type', 'following']]"
"('newtonraphson divider units', 'newtonraphson divider units nrdecdiv64/128')","[['newtonraphson divider units', 'newtonraphson divider units nrdecdiv64/128']]"
"('optimized', 'speed')","[['optimized', 'speed']]"
"('nrdecdiv128-comb', 'dfpa accelerator', 'm2')","[['dfpa accelerator', 'nrdecdiv128-comb', 'm2']]"
"('enable', 'invalid flag', 'fpga', 'inexact', 'invalid', 'invf', 'overflow', '58.22')","[['enable', 'inexact', 'fpga', 'invalid', 'invalid flag'], ['enable', 'inexact', 'invf'], ['enable', 'inexact', 'overflow'], ['enable', 'inexact', 'fpga', 'invalid', '58.22'], ['invalid flag', 'invalid', 'fpga', 'inexact', 'invf'], ['invalid flag', 'invalid', 'fpga', 'inexact', 'overflow'], ['invalid flag', 'invalid', '58.22'], ['invf', 'inexact', 'overflow'], ['invf', 'inexact', 'fpga', 'invalid', '58.22'], ['overflow', 'inexact', 'fpga', 'invalid', '58.22']]"
"('compact core', 'coprocessor', 'core size,', 'comprise arbitrary', 'product verification')","[['compact core', 'coprocessor', 'core size,'], ['compact core', 'coprocessor', 'comprise arbitrary'], ['compact core', 'coprocessor', 'product verification'], ['core size,', 'coprocessor', 'comprise arbitrary'], ['core size,', 'coprocessor', 'product verification'], ['comprise arbitrary', 'coprocessor', 'product verification']]"
"('reset', 'en', 'system', 'underflow', 'flag', 'underflow flag')","[['reset', 'system', 'underflow flag', 'underflow', 'en', 'flag']]"
"('13', 'standard')","[['13', 'standard']]"
"('tool', 'functions', 'unit', 'innovative')","[['tool', 'unit', 'innovative', 'functions']]"
"('nand2', 'code versions,', 'inexact operation')","[['code versions,', 'nand2', 'inexact operation']]"
"('division', 'reduce significand,', 'reduce', 'shifter')","[['division', 'reduce', 'reduce significand,'], ['division', 'reduce', 'shifter'], ['reduce significand,', 'reduce', 'shifter']]"
"('signals', 'output', 'without', 'values')","[['signals', 'without', 'values']]"
"('features',)",[['features']]
"('defined',)",[['defined']]
"('negotiated', 'model', 'configurations')","[['negotiated', 'configurations', 'model']]"
"('operation', 'either')","[['operation', 'either']]"
"('intermediate', 'riq rounded')","[['intermediate', 'riq rounded']]"
"('suites', 'precision', 'accuracy')","[['suites', 'accuracy', 'precision']]"
"('newtonraphson divider', 'dfp newtonraphson', 'divider units nrdecdiv64/128', 'divider units')","[['newtonraphson divider', 'dfp newtonraphson', 'divider units', 'divider units nrdecdiv64/128']]"
"('test vector', 'generation tool', 'vector generation', 'divider unit functions', 'divider unit')","[['test vector', 'divider unit', 'generation tool'], ['test vector', 'divider unit', 'vector generation'], ['test vector', 'divider unit', 'divider unit functions'], ['generation tool', 'divider unit', 'vector generation'], ['generation tool', 'divider unit', 'divider unit functions'], ['vector generation', 'divider unit', 'divider unit functions']]"
"('ea divider exponent eb', 'divider exponent eb divisor', 'eb divisor exponent', 'exponent eb divisor exponent', 'divider exponent eb', 'eb', 'ea divider exponent', 'divisor ea divider exponent', 'dividend', 'exponent eb divisor', 'divisor ea divider')","[['ea divider exponent eb', 'ea divider exponent', 'dividend', 'divider exponent eb', 'divider exponent eb divisor'], ['ea divider exponent eb', 'ea divider exponent', 'dividend', 'eb divisor exponent'], ['ea divider exponent eb', 'ea divider exponent', 'dividend', 'exponent eb divisor', 'exponent eb divisor exponent'], ['ea divider exponent eb', 'ea divider exponent', 'dividend', 'eb', 'divisor ea divider', 'divisor ea divider exponent'], ['divider exponent eb divisor', 'divider exponent eb', 'dividend', 'eb divisor exponent'], ['divider exponent eb divisor', 'divider exponent eb', 'dividend', 'exponent eb divisor', 'exponent eb divisor exponent'], ['divider exponent eb divisor', 'divider exponent eb', 'dividend', 'eb', 'divisor ea divider', 'divisor ea divider exponent'], ['eb divisor exponent', 'dividend', 'exponent eb divisor', 'exponent eb divisor exponent'], ['eb divisor exponent', 'dividend', 'eb', 'divisor ea divider', 'divisor ea divider exponent'], ['exponent eb divisor exponent', 'exponent eb divisor', 'dividend', 'eb', 'divisor ea divider', 'divisor ea divider exponent']]"
"('rtl', 'product', 'nm', 'tsmc')","[['rtl', 'product', 'nm', 'tsmc']]"
"('summarizes', 'detailed', 'performance', 'synthesized', 'technical', 'fully', 'documentation', 'table', 'sample', 'applications', 'combinational', 'found', '90', 'data')","[['synthesized', 'combinational', 'summarizes', 'technical', 'fully'], ['synthesized', 'combinational', 'summarizes', 'technical', 'documentation'], ['synthesized', 'combinational', 'summarizes', 'technical', 'detailed', 'found', 'data', 'table'], ['synthesized', 'combinational', 'summarizes', 'technical', 'detailed', 'found', 'data', 'performance', 'sample'], ['synthesized', 'combinational', 'applications'], ['synthesized', 'combinational', 'summarizes', 'technical', '90'], ['fully', 'technical', 'documentation'], ['fully', 'technical', 'detailed', 'found', 'data', 'table'], ['fully', 'technical', 'detailed', 'found', 'data', 'performance', 'sample'], ['fully', 'technical', 'summarizes', 'combinational', 'applications'], ['fully', 'technical', '90'], ['documentation', 'technical', 'detailed', 'found', 'data', 'table'], ['documentation', 'technical', 'detailed', 'found', 'data', 'performance', 'sample'], ['documentation', 'technical', 'summarizes', 'combinational', 'applications'], ['documentation', 'technical', '90'], ['table', 'data', 'performance', 'sample'], ['table', 'data', 'found', 'detailed', 'technical', 'summarizes', 'combinational', 'applications'], ['table', 'data', 'found', 'detailed', 'technical', '90'], ['sample', 'performance', 'data', 'found', 'detailed', 'technical', 'summarizes', 'combinational', 'applications'], ['sample', 'performance', 'data', 'found', 'detailed', 'technical', '90'], ['applications', 'combinational', 'summarizes', 'technical', '90']]"
"('code', 'vhdl', 'source code:', 'vhdl source', 'source', 'vhdl source code')","[['source code:', 'code', 'source', 'vhdl', 'vhdl source', 'vhdl source code']]"
"('zeros', 'trailing', 'removes', 'comply', 'excess')","[['zeros', 'trailing', 'comply'], ['zeros', 'trailing', 'removes', 'excess'], ['comply', 'trailing', 'removes', 'excess']]"
"('internal',)",[['internal']]
"('zero', 'divide')","[['zero', 'divide']]"
"('dfp divider designs,', 'dfp divider', 'divider designs,', 'decimal interchange', 'nrdecdiv128 ip', 'nrdecdiv128 ip core')","[['dfp divider designs,', 'decimal interchange', 'dfp divider'], ['dfp divider designs,', 'decimal interchange', 'divider designs,'], ['dfp divider designs,', 'decimal interchange', 'nrdecdiv128 ip'], ['dfp divider designs,', 'decimal interchange', 'nrdecdiv128 ip core'], ['dfp divider', 'decimal interchange', 'divider designs,'], ['dfp divider', 'decimal interchange', 'nrdecdiv128 ip'], ['dfp divider', 'decimal interchange', 'nrdecdiv128 ip core'], ['divider designs,', 'decimal interchange', 'nrdecdiv128 ip'], ['divider designs,', 'decimal interchange', 'nrdecdiv128 ip core'], ['nrdecdiv128 ip', 'decimal interchange', 'nrdecdiv128 ip core']]"
"('amount', 'sift amount', 'sift', 'amount sa,')","[['sift amount', 'sift', 'amount', 'amount sa,']]"
"('generation', 'support', 'clock cycle', 'delay', 'packed decimal', 'packed', 'cycle')","[['generation', 'support', 'cycle', 'clock cycle'], ['generation', 'support', 'delay'], ['generation', 'support', 'packed decimal'], ['generation', 'support', 'packed'], ['clock cycle', 'cycle', 'support', 'delay'], ['clock cycle', 'cycle', 'support', 'packed decimal'], ['clock cycle', 'cycle', 'support', 'packed'], ['delay', 'support', 'packed decimal'], ['delay', 'support', 'packed'], ['packed decimal', 'support', 'packed']]"
"('11', 'verilog test', 'verilog test bench')","[['11', 'verilog test', 'verilog test bench']]"
"('deliverable', 'ip deliverable')","[['deliverable', 'ip deliverable']]"
"('iq fq', 'fq', 'fq final', 'fq final quotient')","[['iq fq', 'fq', 'fq final'], ['iq fq', 'fq', 'fq final quotient'], ['fq final', 'fq', 'fq final quotient']]"
"('key features', 'key')","[['key features', 'key']]"
"('dfp newtonraphson divider', 'dfp newtonraphson divider units')","[['dfp newtonraphson divider', 'dfp newtonraphson divider units']]"
"('right', 'number', 'sign', 'produce', 'time', 'parallel')","[['number', 'time', 'right', 'sign'], ['number', 'time', 'right', 'produce'], ['number', 'time', 'right', 'parallel'], ['sign', 'right', 'produce'], ['sign', 'right', 'parallel'], ['produce', 'right', 'parallel']]"
"('754-2008',)",[['754-2008']]
"('rounded',)",[['rounded']]
"('agreement', 'business', 'business model')","[['business', 'agreement', 'business model']]"
"('rst', 'outputs', 'inef')","[['outputs', 'rst', 'inef']]"
"('driven', 'vectors', 'valid')","[['vectors', 'driven', 'valid']]"
"('sift amount sa,', 'rsa rsa', 'rsa right', 'rsa rsa right sift', 'rsa right sift amount', 'rsa', 'rsa right sift', 'rsa rsa right')","[['sift amount sa,', 'rsa', 'rsa rsa'], ['sift amount sa,', 'rsa', 'rsa right'], ['sift amount sa,', 'rsa', 'rsa rsa right', 'rsa rsa right sift'], ['sift amount sa,', 'rsa', 'rsa right sift', 'rsa right sift amount'], ['rsa rsa', 'rsa', 'rsa right'], ['rsa rsa', 'rsa', 'rsa rsa right', 'rsa rsa right sift'], ['rsa rsa', 'rsa', 'rsa right sift', 'rsa right sift amount'], ['rsa right', 'rsa', 'rsa rsa right', 'rsa rsa right sift'], ['rsa right', 'rsa', 'rsa right sift', 'rsa right sift amount'], ['rsa rsa right sift', 'rsa rsa right', 'rsa', 'rsa right sift', 'rsa right sift amount']]"
"('encrypted', 'text', 'netlist', 'plain')","[['text', 'plain', 'encrypted', 'netlist']]"
"('could', 'depends')","[['could', 'depends']]"
"('efficient', 'cover', 'vector', 'conformance', 'constraint')","[['efficient', 'cover', 'conformance', 'vector'], ['efficient', 'cover', 'constraint'], ['vector', 'conformance', 'cover', 'constraint']]"
"('digits', 'decimal128', 'design', 'format support', '34')","[['decimal128', 'design', 'digits', 'format support'], ['decimal128', 'design', '34'], ['format support', 'digits', 'design', '34']]"
"('core', 'decimal', 'verification')","[['core', 'verification', 'decimal']]"
"('interchange format', 'cycle delay', 'decimal interchange format', 'interchange')","[['interchange format', 'decimal interchange format', 'interchange', 'cycle delay']]"
"('using',)",[['using']]
"('specification', 'hdl', 'core specification')","[['specification', 'core specification', 'hdl']]"
"('iq fq final quotient', 'iq fq final')","[['iq fq final quotient', 'iq fq final']]"
"('parallel decimal', 'ieee', 'novel parallel')","[['parallel decimal', 'ieee', 'novel parallel']]"
"('dfpa on-chip', 'dfpa')","[['dfpa on-chip', 'dfpa']]"
"('compact', 'comprise', 'deployment')","[['compact', 'deployment', 'comprise']]"
"('notice', 'reserved', 'modes', 'copyright', 'rounding', 'seven', 'resultant', 'content', 'flags', 'mode', 'sheet', 'cycles')","[['reserved', 'notice', 'flags', 'sheet', 'resultant', 'rounding', 'seven', 'cycles', 'modes'], ['reserved', 'notice', 'copyright'], ['reserved', 'notice', 'content'], ['reserved', 'notice', 'flags', 'sheet', 'resultant', 'mode'], ['modes', 'cycles', 'seven', 'rounding', 'resultant', 'sheet', 'flags', 'notice', 'copyright'], ['modes', 'cycles', 'seven', 'rounding', 'resultant', 'sheet', 'flags', 'notice', 'content'], ['modes', 'cycles', 'seven', 'rounding', 'resultant', 'mode'], ['copyright', 'notice', 'content'], ['copyright', 'notice', 'flags', 'sheet', 'resultant', 'mode'], ['content', 'notice', 'flags', 'sheet', 'resultant', 'mode']]"
"('test', 'full', 'full dfp', 'dfp accuracy')","[['full', 'test', 'full dfp'], ['full', 'test', 'dfp accuracy'], ['full dfp', 'test', 'dfp accuracy']]"
"('control', '3.20', 'master control', 'computed', 'accelerator', 'output formulation', 'specifications', 'master control generates', 'area', '2.62', 'preferred', 'prior', 'appropriate', 'reserves', 'master', 'result', 'sets', 'boards', 'generates')","[['3.20', 'area', 'accelerator', 'result', 'generates', 'preferred', 'control', 'computed'], ['3.20', 'area', 'accelerator', 'result', 'generates', 'preferred', 'appropriate', 'master', 'master control', 'output formulation'], ['3.20', 'area', 'accelerator', 'result', 'generates', 'preferred', 'control', 'prior', 'specifications'], ['3.20', 'area', 'accelerator', 'result', 'generates', 'preferred', 'appropriate', 'master', 'master control', 'master control generates'], ['3.20', 'area', 'accelerator', 'result', 'generates', 'preferred', 'control', 'prior', 'reserves'], ['3.20', 'area', 'accelerator', 'result', 'generates', 'preferred', 'sets'], ['3.20', 'area', '2.62', 'boards'], ['computed', 'control', 'preferred', 'appropriate', 'master', 'master control', 'output formulation'], ['computed', 'control', 'prior', 'specifications'], ['computed', 'control', 'preferred', 'appropriate', 'master', 'master control', 'master control generates'], ['computed', 'control', 'prior', 'reserves'], ['computed', 'control', 'preferred', 'sets'], ['computed', 'control', 'preferred', 'generates', 'result', 'accelerator', 'area', '2.62', 'boards'], ['output formulation', 'master control', 'master', 'appropriate', 'preferred', 'control', 'prior', 'specifications'], ['output formulation', 'master control', 'master control generates'], ['output formulation', 'master control', 'master', 'appropriate', 'preferred', 'control', 'prior', 'reserves'], ['output formulation', 'master control', 'master', 'appropriate', 'preferred', 'sets'], ['output formulation', 'master control', 'master', 'appropriate', 'preferred', 'generates', 'result', 'accelerator', 'area', '2.62', 'boards'], ['specifications', 'prior', 'control', 'preferred', 'appropriate', 'master', 'master control', 'master control generates'], ['specifications', 'prior', 'reserves'], ['specifications', 'prior', 'control', 'preferred', 'sets'], ['specifications', 'prior', 'control', 'preferred', 'generates', 'result', 'accelerator', 'area', '2.62', 'boards'], ['master control generates', 'master control', 'master', 'appropriate', 'preferred', 'control', 'prior', 'reserves'], ['master control generates', 'master control', 'master', 'appropriate', 'preferred', 'sets'], ['master control generates', 'master control', 'master', 'appropriate', 'preferred', 'generates', 'result', 'accelerator', 'area', '2.62', 'boards'], ['reserves', 'prior', 'control', 'preferred', 'sets'], ['reserves', 'prior', 'control', 'preferred', 'generates', 'result', 'accelerator', 'area', '2.62', 'boards'], ['sets', 'preferred', 'generates', 'result', 'accelerator', 'area', '2.62', 'boards']]"
"('exception', 'employing', 'rs', 'fixed')","[['exception', 'fixed', 'employing'], ['exception', 'fixed', 'rs'], ['employing', 'fixed', 'rs']]"
"('iq intermediate quotient', 'intermediate quotient ea,', 'iq', 'iq intermediate', 'iq intermediate quotient ea,', 'quotient ea,')","[['iq intermediate', 'iq intermediate quotient', 'iq', 'iq intermediate quotient ea,'], ['iq intermediate', 'iq intermediate quotient', 'iq', 'intermediate quotient ea,', 'quotient ea,'], ['iq intermediate quotient ea,', 'iq', 'intermediate quotient ea,', 'quotient ea,']]"
"('fo4', 'nr', 'nrdecdiv64-comb', 'on-chip')","[['nrdecdiv64-comb', 'nr', 'fo4', 'on-chip']]"
"('riq rounded intermediate', 'riq rounded intermediate quotient', 'riq')","[['riq rounded intermediate', 'riq', 'riq rounded intermediate quotient']]"
"('significand normalization',)",[['significand normalization']]
"('20072010', 'change www.silminds.com', 'formulates', 'change', 'rights')","[['20072010', 'change', 'change www.silminds.com'], ['20072010', 'change', 'formulates'], ['20072010', 'change', 'rights'], ['change www.silminds.com', 'change', 'formulates'], ['change www.silminds.com', 'change', 'rights'], ['formulates', 'change', 'rights']]"
"('zero flag', 'divide by', 'divide by zero flag', 'divide by zero')","[['divide by', 'zero flag', 'divide by zero', 'divide by zero flag']]"
"('dpd',)",[['dpd']]
"('fit', 'normalization', 'performs', 'quotient')","[['fit', 'normalization', 'performs', 'quotient']]"
"('input detection', 'infinity', 'operands', 'point', 'multiplier', 'nan', 'point division,', 'detection', 'rounder', 'formulation', 'corrector', 'bit')","[['operands', 'multiplier', 'point', 'detection', 'infinity', 'corrector', 'input detection', 'nan'], ['operands', 'multiplier', 'point', 'point division,'], ['operands', 'multiplier', 'point', 'detection', 'infinity', 'rounder'], ['operands', 'multiplier', 'point', 'detection', 'formulation'], ['operands', 'multiplier', 'bit'], ['nan', 'input detection', 'corrector', 'infinity', 'detection', 'point', 'point division,'], ['nan', 'input detection', 'corrector', 'infinity', 'rounder'], ['nan', 'input detection', 'corrector', 'infinity', 'detection', 'formulation'], ['nan', 'input detection', 'corrector', 'infinity', 'detection', 'point', 'multiplier', 'bit'], ['point division,', 'point', 'detection', 'infinity', 'rounder'], ['point division,', 'point', 'detection', 'formulation'], ['point division,', 'point', 'multiplier', 'bit'], ['rounder', 'infinity', 'detection', 'formulation'], ['rounder', 'infinity', 'detection', 'point', 'multiplier', 'bit'], ['formulation', 'detection', 'point', 'multiplier', 'bit']]"
"('sb', 'ef exception', 'ef')","[['sb', 'ef', 'ef exception']]"
"('encodes', 'format')","[['encodes', 'format']]"
"('uf', 'clk')","[['uf', 'clk']]"
"('divider exponent', 'ea divider', 'exponent', 'divisor exponent', 'ea', 'divisor ea', 'decodes', 'exponent eb', 'sign bit,', 'eb divisor')","[['divider exponent', 'ea', 'ea divider'], ['divider exponent', 'ea', 'divisor exponent'], ['divider exponent', 'ea', 'divisor ea'], ['divider exponent', 'ea', 'exponent', 'decodes'], ['divider exponent', 'ea', 'exponent eb'], ['divider exponent', 'ea', 'exponent', 'sign bit,'], ['divider exponent', 'ea', 'eb divisor'], ['ea divider', 'ea', 'divisor exponent'], ['ea divider', 'ea', 'divisor ea'], ['ea divider', 'ea', 'exponent', 'decodes'], ['ea divider', 'ea', 'exponent eb'], ['ea divider', 'ea', 'exponent', 'sign bit,'], ['ea divider', 'ea', 'eb divisor'], ['divisor exponent', 'ea', 'divisor ea'], ['divisor exponent', 'ea', 'exponent', 'decodes'], ['divisor exponent', 'ea', 'exponent eb'], ['divisor exponent', 'ea', 'exponent', 'sign bit,'], ['divisor exponent', 'ea', 'eb divisor'], ['divisor ea', 'ea', 'exponent', 'decodes'], ['divisor ea', 'ea', 'exponent eb'], ['divisor ea', 'ea', 'exponent', 'sign bit,'], ['divisor ea', 'ea', 'eb divisor'], ['decodes', 'exponent', 'ea', 'exponent eb'], ['decodes', 'exponent', 'sign bit,'], ['decodes', 'exponent', 'ea', 'eb divisor'], ['exponent eb', 'ea', 'exponent', 'sign bit,'], ['exponent eb', 'ea', 'eb divisor'], ['sign bit,', 'exponent', 'ea', 'eb divisor']]"
"('source code', 'verilog source', 'verilog', 'verilog source code')","[['source code', 'verilog', 'verilog source', 'verilog source code']]"
