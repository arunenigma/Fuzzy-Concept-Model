"('storage', 'sign')","[['storage', 'sign']]"
"('windows',)",[['windows']]
"('lies', 'detected', 'cause', 'events', 'simply')","[['lies', 'cause', 'events', 'detected'], ['lies', 'cause', 'simply'], ['detected', 'events', 'cause', 'simply']]"
"('signals', 'input', 'input signals:', 'otherwise')","[['signals', 'input', 'input signals:'], ['signals', 'input', 'otherwise'], ['input signals:', 'input', 'otherwise']]"
"('single precision', 'single')","[['single precision', 'single']]"
"('00000001',)",[['00000001']]
"('please', 'possible', 'detail')","[['please', 'possible', 'detail']]"
"('verify', 'results', 'thats')","[['verify', 'thats', 'results']]"
"('xml',)",[['xml']]
"('digits', 'work', '1.0001', '12.1019', 'another', 'digital', '34.0000')","[['1.0001', 'work', '12.1019'], ['1.0001', 'work', 'digits', 'digital'], ['1.0001', 'work', '34.0000'], ['12.1019', 'work', 'digits', 'digital'], ['12.1019', 'work', '34.0000'], ['digital', 'digits', 'work', '34.0000']]"
"('10000001', '0.5')","[['10000001', '0.5']]"
"('society', 'scientist', 'computer', '1985', 'know')","[['society', 'computer', 'scientist'], ['society', 'computer', '1985'], ['society', 'computer', 'know'], ['scientist', 'computer', '1985'], ['scientist', 'computer', 'know'], ['1985', 'computer', 'know']]"
"('1996',)",[['1996']]
"('3.2.6',)",[['3.2.6']]
"('precise', 'precise results,')","[['precise', 'precise results,']]"
"('mantissa m,', 'mantissa')","[['mantissa m,', 'mantissa']]"
"('*3468', 'usselmann')","[['*3468', 'usselmann']]"
"('hardware implementation',)",[['hardware implementation']]
"('source', 'important', 'open', 'presented')","[['important', 'source', 'presented', 'open']]"
"('run', 'meeting', 'approximately')","[['run', 'meeting', 'approximately']]"
"('compare', 'remainder')","[['compare', 'remainder']]"
"('million', 'fond', 'modelsim', 'flag', 'underflow flag', 'worth')","[['fond', 'flag', 'million', 'underflow flag', 'modelsim'], ['fond', 'flag', 'worth'], ['modelsim', 'underflow flag', 'million', 'flag', 'worth']]"
"('formula', 'bias', 'understand', 'implicit')","[['bias', 'implicit', 'formula', 'understand']]"
"('flow diagram', 'flow', 'complex', 'lot')","[['flow diagram', 'flow', 'complex'], ['flow diagram', 'flow', 'lot'], ['complex', 'flow', 'lot']]"
"('contents',)",[['contents']]
"('bin', 'b0-23')","[['bin', 'b0-23']]"
"('listed', 'higher')","[['listed', 'higher']]"
"('3.4', 'towards', 'rounded', 'round-up', 'opposite')","[['3.4', 'rounded', 'towards', 'opposite']]"
"('financial', 'like', 'brings', 'away', 'exactly', 'commercial', 'thought', 'fractional', 'problems', 'powers')","[['exactly', 'financial', 'brings', 'away', 'problems', 'thought'], ['exactly', 'financial', 'brings', 'away', 'like', 'commercial', 'fractional'], ['exactly', 'financial', 'brings', 'away', 'powers'], ['thought', 'problems', 'away', 'like', 'commercial', 'fractional'], ['thought', 'problems', 'away', 'powers'], ['fractional', 'commercial', 'like', 'away', 'powers']]"
"('doesnt concern',)",[['doesnt concern']]
"('even', '3.3.1', 'nearest')","[['3.3.1', 'even', 'nearest']]"
"('adding', 'integers')","[['adding', 'integers']]"
"('demonstrate',)",[['demonstrate']]
"('hardware area',)",[['hardware area']]
"('square-unit',)",[['square-unit']]
"('= sign',)",[['= sign']]
"('fpu operations:', 'start_i')","[['fpu operations:', 'start_i']]"
"('3.47', 'get truncated,', 'get', 'truncated', 'basically', 'excess', 'mode')","[['3.47', 'truncated', 'excess', 'get', 'get truncated,'], ['3.47', 'truncated', 'basically', 'mode'], ['get truncated,', 'get', 'excess', 'truncated', 'basically', 'mode']]"
"('want',)",[['want']]
"('added', 'occurred')","[['added', 'occurred']]"
"('base number',)",[['base number']]
"('00', 'name', 'signal', 'opb_i', 'start', '001', 'clock signal')","[['00', '001', 'signal', 'opb_i'], ['00', '001', 'signal', 'start'], ['00', '001', 'signal', 'name', 'clock signal'], ['opb_i', 'signal', 'start'], ['opb_i', 'signal', 'name', 'clock signal'], ['start', 'signal', 'name', 'clock signal']]"
"('include', 'special')","[['include', 'special']]"
"('operations', 'combine')","[['operations', 'combine']]"
"('889', '259')","[['889', '259']]"
"('logic elements:',)",[['logic elements:']]
"('loops', 'calculated', 'divisors')","[['loops', 'calculated', 'divisors']]"
"('specifies',)",[['specifies']]
"('26', 'enable', 'speed', '13', 'dividing')","[['26', 'enable', 'speed'], ['26', 'enable', '13'], ['26', 'enable', 'dividing'], ['speed', 'enable', '13'], ['speed', 'enable', 'dividing'], ['13', 'enable', 'dividing']]"
"('trigger', 'maximum value', 'overflow exception')","[['maximum value', 'trigger', 'overflow exception']]"
"('4.2',)",[['4.2']]
"('altera quartus ii', 'altera quartus', 'cyclone iep1c6q240c6')","[['altera quartus ii', 'cyclone iep1c6q240c6', 'altera quartus']]"
"('2110', '1.0000')","[['2110', '1.0000']]"
"('needed', 'shown', 'nr', 'logic')","[['needed', 'shown', 'logic', 'nr']]"
"('3.2.7',)",[['3.2.7']]
"('output_o', 'fpu_op_i', 'comes', 'groups', 'width')","[['output_o', 'width', 'fpu_op_i'], ['output_o', 'width', 'groups', 'comes'], ['fpu_op_i', 'width', 'groups', 'comes']]"
"('919',)",[['919']]
"('else',)",[['else']]
"('positive', 'negative')","[['positive', 'negative']]"
"('serial', 'would', 'disadvantage')","[['would', 'serial', 'disadvantage']]"
"('real', 'one')","[['real', 'one']]"
"('fractions', 'za', 'calculate', 'according')","[['za', 'fractions', 'according']]"
"('implementation', 'basic-', 'concern')","[['implementation', 'concern', 'basic-']]"
"('ready_o', 'rmode_i', 'description')","[['ready_o', 'description', 'rmode_i']]"
"('eo',)",[['eo']]
"('defines', 'five', 'encountered')","[['defines', 'encountered', 'five']]"
"('worth mentioning', 'million test')","[['worth mentioning', 'million test']]"
"('value',)",[['value']]
"('1530',)",[['1530']]
"('quartus', 'summery', 'fpus', 'altera')","[['quartus', 'fpus', 'summery'], ['quartus', 'fpus', 'altera'], ['summery', 'fpus', 'altera']]"
"('current', 'designed')","[['current', 'designed']]"
"('684',)",[['684']]
"('qnan', 'qnan exception:', 'qnan string')","[['qnan exception:', 'qnan', 'qnan string']]"
"('vectors', 'test bench', '14')","[['test bench', 'vectors', '14']]"
"('vhdl code,', 'detail please', 'vhdl')","[['detail please', 'vhdl code,', 'vhdl']]"
"('fully', 'allows')","[['fully', 'allows']]"
"('5.6',)",[['5.6']]
"('save logic', 'modifying', 'future', 'instantiating', 'units', 'totally')","[['save logic', 'future', 'modifying'], ['save logic', 'future', 'instantiating'], ['save logic', 'future', 'units'], ['save logic', 'future', 'totally'], ['modifying', 'future', 'instantiating'], ['modifying', 'future', 'units'], ['modifying', 'future', 'totally'], ['instantiating', 'future', 'units'], ['instantiating', 'future', 'totally'], ['units', 'future', 'totally']]"
"('fracb',)",[['fracb']]
"('done parallel',)",[['done parallel']]
"('left-shift', 'last', 'take', 'back')","[['left-shift', 'take', 'last', 'back']]"
"('format is:', 'number', 'single-precision')","[['format is:', 'number', 'single-precision']]"
"('leading', 'normalized')","[['leading', 'normalized']]"
"('could', 'use', 'systems')","[['could', 'systems', 'use']]"
"('subtraction',)",[['subtraction']]
"('1.4', 'scale', 'ease', '1038', 'solution', 'losing', 'window', '10-45', 'fixed')","[['1.4', 'losing', 'solution', 'window', 'ease', 'scale'], ['1.4', 'losing', 'solution', '1038'], ['1.4', 'losing', 'solution', '10-45'], ['1.4', 'losing', 'solution', 'window', 'fixed'], ['scale', 'ease', 'window', 'solution', '1038'], ['scale', 'ease', 'window', 'solution', '10-45'], ['scale', 'ease', 'window', 'fixed'], ['1038', 'solution', '10-45'], ['1038', 'solution', 'window', 'fixed'], ['10-45', 'solution', 'window', 'fixed']]"
"('regard', 'detect', 'infinity')","[['regard', 'detect', 'infinity']]"
"('mentioning', 'supposedly', 'miscellaneous', 'bench', 'bugs', 'differently', '2nd')","[['miscellaneous', 'differently', 'bench'], ['miscellaneous', 'differently', 'bugs'], ['miscellaneous', 'differently', 'mentioning', 'supposedly', '2nd'], ['bench', 'differently', 'bugs'], ['bench', 'differently', 'mentioning', 'supposedly', '2nd'], ['bugs', 'differently', 'mentioning', 'supposedly', '2nd']]"
"('shifted', 'four', '0.0010')","[['four', 'shifted', '0.0010']]"
"('fp', 'fp numbers:')","[['fp', 'fp numbers:']]"
"('behind', 'sections')","[['behind', 'sections']]"
"('iep1c6q240c6', 'v.5', 'quartus ii')","[['iep1c6q240c6', 'quartus ii', 'v.5']]"
"('uninitialized', 'operation', 'string', 'subject')","[['uninitialized', 'operation', 'string', 'subject']]"
"('1991', 'happens', 'set', 'snan string otherwise', 'scientist should know about', 'never', 'scientist should know', 'every')","[['1991', 'every', 'never', 'snan string otherwise', 'happens'], ['1991', 'every', 'never', 'set'], ['1991', 'every', 'scientist should know about'], ['1991', 'every', 'scientist should know'], ['happens', 'snan string otherwise', 'never', 'set'], ['happens', 'snan string otherwise', 'never', 'every', 'scientist should know about'], ['happens', 'snan string otherwise', 'never', 'every', 'scientist should know'], ['set', 'never', 'every', 'scientist should know about'], ['set', 'never', 'every', 'scientist should know'], ['scientist should know about', 'every', 'scientist should know']]"
"('acrobat pdfmaker', 'pdfmaker')","[['acrobat pdfmaker', 'pdfmaker']]"
"('taken', '32', 'multiplier')","[['taken', 'multiplier', '32']]"
"('sign bit', '127', 'whole', 'given', 'actually')","[['sign bit', 'given', '127'], ['sign bit', 'given', 'whole'], ['sign bit', 'given', 'actually'], ['127', 'given', 'whole'], ['127', 'given', 'actually'], ['whole', 'given', 'actually']]"
"('detect faster',)",[['detect faster']]
"('base', 'choose')","[['base', 'choose']]"
"('always', 'except')","[['always', 'except']]"
"('altera quartus ii v.5',)",[['altera quartus ii v.5']]
"('diagram', 'subtracting')","[['diagram', 'subtracting']]"
"('remember', 'extra', 'positions', 'accurate', 'yield', '0.0001', 'bit')","[['remember', 'extra', 'bit', 'positions'], ['remember', 'extra', 'accurate'], ['remember', 'extra', 'yield'], ['remember', 'extra', 'bit', '0.0001'], ['positions', 'bit', 'extra', 'accurate'], ['positions', 'bit', 'extra', 'yield'], ['positions', 'bit', '0.0001'], ['accurate', 'extra', 'yield'], ['accurate', 'extra', 'bit', '0.0001'], ['yield', 'extra', 'bit', '0.0001']]"
"('multiplication unit:',)",[['multiplication unit:']]
"('clk_i',)",[['clk_i']]
"('na',)",[['na']]
"('conclusion',)",[['conclusion']]
"('7.0', 'acrobat')","[['7.0', 'acrobat']]"
"('clock cycles', 'processing', 'clock', 'time fmax', '7392', 'reduce', 'thing', 'cycles')","[['clock cycles', '7392', 'cycles', 'clock', 'reduce', 'processing'], ['clock cycles', '7392', 'cycles', 'clock', 'reduce', 'thing', 'time fmax'], ['processing', 'reduce', 'thing', 'time fmax']]"
"('smallest',)",[['smallest']]
"('loss', 'rounding', 'underflow', 'implementer', 'tininess', '3.2.4', 'choice', 'accuracy')","[['implementer', 'rounding', 'tininess', 'underflow', '3.2.4'], ['implementer', 'rounding', 'choice'], ['implementer', 'rounding', 'accuracy'], ['3.2.4', 'underflow', 'tininess', 'rounding', 'choice'], ['3.2.4', 'underflow', 'tininess', 'rounding', 'accuracy'], ['choice', 'rounding', 'accuracy']]"
"('3.2',)",[['3.2']]
"('102.7',)",[['102.7']]
"('011', 'overflow', '3.2.5', '10')","[['3.2.5', 'overflow', '011', '10']]"
"('defined',)",[['defined']]
"('better', 'stored', 'corresponding')","[['stored', 'better', 'corresponding']]"
"('4.4',)",[['4.4']]
"('11', 'inf_o')","[['11', 'inf_o']]"
"('exception',)",[['exception']]
"('strings',)",[['strings']]
"('1.0010',)",[['1.0010']]
"('snan_o', '111')","[['snan_o', '111']]"
"('8.1', 'intended', 'synthesized')","[['8.1', 'synthesized', 'intended']]"
"('3.2.3',)",[['3.2.3']]
"('increase', 'guard', 'storage holders,', 'fraction', 'result precision')","[['increase', 'fraction', 'guard', 'storage holders,'], ['increase', 'fraction', 'guard', 'result precision'], ['storage holders,', 'guard', 'result precision']]"
"('reasons', 'represented', 'decimal', 'exact', 'representations')","[['decimal', 'reasons', 'exact', 'represented', 'representations']]"
"('signal name',)",[['signal name']]
"('right', 'equal')","[['right', 'equal']]"
"('step',)",[['step']]
"('output multiplexer', 'multiplexer code,')","[['output multiplexer', 'multiplexer code,']]"
"('operand', 'square root:')","[['operand', 'square root:']]"
"('stages', 'three')","[['stages', 'three']]"
"('3.3.2',)",[['3.3.2']]
"('exceptions', 'output', 'non', 'handling', 'output signals:')","[['non', 'handling', 'exceptions', 'output', 'output signals:']]"
"('restricted', 'due')","[['restricted', 'due']]"
"('snan string', 'snan', 'snan exception')","[['snan string', 'snan exception', 'snan']]"
"('ine_o', '= add,')","[['ine_o', '= add,']]"
"('priority', 'difficult')","[['priority', 'difficult']]"
"('range', 'placeholder', 'example')","[['range', 'placeholder', 'example']]"
"('2140',)",[['2140']]
"('3.5',)",[['3.5']]
"('34',)",[['34']]
"('introduction',)",[['introduction']]
"('importantly', 'less')","[['importantly', 'less']]"
"('division', 'zero', '12', 'divide-by-zero', 'divide-by-zero exception')","[['12', 'division', 'divide-by-zero', 'zero', 'divide-by-zero exception']]"
"('represent', 'use fixed-point', 'number representation')","[['use fixed-point', 'represent', 'number representation']]"
"('multiplexer',)",[['multiplexer']]
"('mhz', 'mhz operating')","[['mhz', 'mhz operating']]"
"('compiled', 'pro', 'fpga')","[['pro', 'compiled', 'fpga']]"
"('24', 'el', 'es', '22')","[['el', 'es', '24', '22']]"
"('biased', 'used')","[['biased', 'used']]"
"('divided', 'components')","[['divided', 'components']]"
"('multiplication', 'differentiate')","[['multiplication', 'differentiate']]"
"('architecture',)",[['architecture']]
"('wide', 'layout', 'show')","[['wide', 'show', 'layout']]"
"('specified',)",[['specified']]
"('opa_i',)",[['opa_i']]
"('signaling', 'invalid', 'quiet')","[['signaling', 'invalid', 'quiet']]"
"('count', 'zeros')","[['count', 'zeros']]"
"('3.3.3',)",[['3.3.3']]
"('different',)",[['different']]
"('010', '01')","[['010', '01']]"
"('fmax',)",[['fmax']]
"('radix', 'called')","[['radix', 'called']]"
"('floating',)",[['floating']]
"('exponent and/or', 'precision range', 'precision')","[['exponent and/or', 'precision', 'precision range']]"
"('including',)",[['including']]
"('faster',)",[['faster']]
"('928',)",[['928']]
"('supported',)",[['supported']]
"('algorithm', 'efficient', 'hardware', 'square-root algorithm', 'square-root unit:', 'square-root')","[['algorithm', 'hardware', 'efficient'], ['algorithm', 'hardware', 'square-root', 'square-root algorithm'], ['algorithm', 'hardware', 'square-root', 'square-root unit:'], ['efficient', 'hardware', 'square-root', 'square-root algorithm'], ['efficient', 'hardware', 'square-root', 'square-root unit:'], ['square-root algorithm', 'square-root', 'square-root unit:']]"
"('interface',)",[['interface']]
"('addition', 'cases', 'give')","[['addition', 'cases', 'give']]"
"('subtract', 'start signal')","[['subtract', 'start signal']]"
"('files', 'order')","[['files', 'order']]"
"('situation', 'way', 'etc')","[['situation', 'way', 'etc']]"
"('exponent e',)",[['exponent e']]
"('necessary', 'normal')","[['necessary', 'normal']]"
"('ready', 'add', '000', 'modes')","[['ready', 'add', '000', 'modes']]"
"('+ infinity',)",[['+ infinity']]
"('3.2.2',)",[['3.2.2']]
"('0.0100',)",[['0.0100']]
"('shown below:',)",[['shown below:']]
"('al-eryani', 'processing unit')","[['al-eryani', 'processing unit']]"
"('step1',)",[['step1']]
"('1.1001',)",[['1.1001']]
"('2.5',)",[['2.5']]
"('show below:', 'double-precision')","[['show below:', 'double-precision']]"
"('compared', 'however', 'values', 'choosing', 'test', 'boundary')","[['compared', 'test', 'however'], ['compared', 'test', 'values'], ['compared', 'test', 'choosing'], ['compared', 'test', 'boundary'], ['however', 'test', 'values'], ['however', 'test', 'choosing'], ['however', 'test', 'boundary'], ['values', 'test', 'choosing'], ['values', 'test', 'boundary'], ['choosing', 'test', 'boundary']]"
"('whenever', 'qnan exception')","[['whenever', 'qnan exception']]"
"('differ', 'elements', 'point', 'complies', '36', 'needs', 'numbers', 'point unit', 'unit')","[['elements', 'differ', 'unit', 'point', 'numbers', 'point unit', 'complies'], ['elements', 'differ', 'unit', '36'], ['elements', 'differ', 'needs'], ['complies', 'point unit', 'point', 'unit', '36'], ['complies', 'point unit', 'point', 'unit', 'differ', 'needs'], ['36', 'unit', 'differ', 'needs']]"
"('modular',)",[['modular']]
"('easily', 'disable', 'connecting')","[['easily', 'connecting', 'disable']]"
"('ieee standard',)",[['ieee standard']]
"('lowering', 'decreases', 'without', 'decreasing', 'decreased', 'reduced')","[['decreases', 'lowering', 'decreased', 'decreasing'], ['decreases', 'lowering', 'decreased', 'reduced'], ['decreasing', 'decreased', 'reduced']]"
"('core', 'cost', 'reach', 'throughput', 'able')","[['cost', 'core', 'reach', 'throughput', 'able']]"
"('made', 'top', 'top unit:', 'written', '326', 'small')","[['made', 'written', 'small', 'top', 'top unit:'], ['made', 'written', 'small', 'top', '326'], ['top unit:', 'top', '326']]"
"('mhz operating frequency', 'frequency', 'operating')","[['mhz operating frequency', 'frequency', 'operating']]"
"('table', 'make')","[['table', 'make']]"
"('1.1110',)",[['1.1110']]
"('1.1101',)",[['1.1101']]
"('nan', 'sign bit:')","[['nan', 'sign bit:']]"
"('instead', 'times')","[['instead', 'times']]"
"('save clock', 'clock cycles,')","[['save clock', 'clock cycles,']]"
"('underflow exception', 'denormalization', 'signaled', 'result', 'whenever tininess', 'exception whenever', 'denormalization loss')","[['underflow exception', 'signaled', 'whenever tininess', 'result', 'denormalization'], ['underflow exception', 'signaled', 'whenever tininess', 'result', 'exception whenever'], ['underflow exception', 'signaled', 'whenever tininess', 'result', 'denormalization loss'], ['denormalization', 'result', 'exception whenever'], ['denormalization', 'result', 'denormalization loss'], ['exception whenever', 'result', 'denormalization loss']]"
"('addition unit:',)",[['addition unit:']]
"('word',)",[['word']]
"('distiller', 'acrobat distiller')","[['distiller', 'acrobat distiller']]"
"('goldberg', 'david')","[['goldberg', 'david']]"
"('parallel', 'hand')","[['parallel', 'hand']]"
"('qnan_o', '110')","[['qnan_o', '110']]"
"('zb',)",[['zb']]
"('synthesis',)",[['synthesis']]
"('3.3.4',)",[['3.3.4']]
"('100', 'help', 'exponents')","[['100', 'help', 'exponents']]"
"('easy',)",[['easy']]
"('divisions', 'saving', 'often', 'area', 'process', 'taught', 'schools', 'serially', 'multiple', 'multiplications', 'subtractions')","[['divisions', 'multiplications', 'area', 'taught', 'saving', 'serially', 'process', 'often'], ['divisions', 'multiplications', 'area', 'taught', 'saving', 'schools'], ['divisions', 'multiplications', 'area', 'taught', 'saving', 'serially', 'multiple'], ['divisions', 'multiplications', 'area', 'taught', 'saving', 'subtractions'], ['often', 'process', 'serially', 'saving', 'schools'], ['often', 'process', 'serially', 'multiple'], ['often', 'process', 'serially', 'saving', 'subtractions'], ['schools', 'saving', 'serially', 'multiple'], ['schools', 'saving', 'subtractions'], ['multiple', 'serially', 'saving', 'subtractions']]"
"('handle', 'operands', 'transformed', 'formats', 'internally', 'makes')","[['transformed', 'handle', 'operands', 'internally'], ['transformed', 'handle', 'makes'], ['internally', 'operands', 'handle', 'makes']]"
"('1.11000010',)",[['1.11000010']]
"('not-a-number',)",[['not-a-number']]
"('goals', 'time')","[['goals', 'time']]"
"('4.3',)",[['4.3']]
"('institute', 'electronics', 'define', 'electrical', 'engineers')","[['institute', 'engineers', 'define', 'electronics'], ['institute', 'engineers', 'define', 'electrical'], ['electronics', 'define', 'electrical']]"
"('35',)",[['35']]
"('fraco',)",[['fraco']]
"('larger',)",[['larger']]
"('representation', 'base b=10,')","[['representation', 'base b=10,']]"
"('format',)",[['format']]
"('dependent', 'extended')","[['dependent', 'extended']]"
"('3.2.1', 'invalid operation')","[['3.2.1', 'invalid operation']]"
"('0.1', 'using', 'cannot', 'parameters', 'applications')","[['cannot', '0.1', 'using', 'parameters'], ['cannot', '0.1', 'using', 'applications'], ['parameters', 'using', 'applications']]"
"('code', 'outlined', 'see', 'much', 'algorithms', 'commented')","[['outlined', 'much', 'see'], ['outlined', 'much', 'algorithms'], ['outlined', 'much', 'code', 'commented'], ['see', 'much', 'algorithms'], ['see', 'much', 'code', 'commented'], ['algorithms', 'much', 'code', 'commented']]"
"('ii v.5', 'quartus ii v.5')","[['ii v.5', 'quartus ii v.5']]"
"('done', 'basic')","[['done', 'basic']]"
"('independent', 'sometimes', 'actual', 'bits', 'chip', 'since', 'turned', 'temporally', 'sticky', 'infinite', 'holders', 'ever')","[['independent', 'chip', 'since', 'actual'], ['independent', 'chip', 'since', 'ever', 'infinite', 'bits'], ['independent', 'chip', 'since', 'ever', 'sometimes', 'turned'], ['independent', 'chip', 'since', 'temporally', 'sticky'], ['independent', 'chip', 'since', 'holders'], ['actual', 'since', 'ever', 'infinite', 'bits'], ['actual', 'since', 'ever', 'sometimes', 'turned'], ['actual', 'since', 'temporally', 'sticky'], ['actual', 'since', 'holders'], ['bits', 'infinite', 'ever', 'sometimes', 'turned'], ['bits', 'infinite', 'ever', 'since', 'temporally', 'sticky'], ['bits', 'infinite', 'ever', 'since', 'holders'], ['turned', 'sometimes', 'ever', 'since', 'temporally', 'sticky'], ['turned', 'sometimes', 'ever', 'since', 'holders'], ['sticky', 'temporally', 'since', 'holders']]"
"('283',)",[['283']]
"('diff', 'exponent diff', 'exponent')","[['diff', 'exponent', 'exponent diff']]"
"('1.1100',)",[['1.1100']]
"('jidan al-eryani', 'jidan')","[['jidan al-eryani', 'jidan']]"
"('11000',)",[['11000']]
"('achieved', 'stated')","[['achieved', 'stated']]"
"('pre-', 'done serial')","[['pre-', 'done serial']]"
"('4.1',)",[['4.1']]
"('10000', '00000')","[['10000', '00000']]"
"('whole range', '-27', 'exponent placeholder,', 'fraction bit')","[['whole range', '-27', 'exponent placeholder,'], ['whole range', '-27', 'fraction bit'], ['exponent placeholder,', '-27', 'fraction bit']]"
"('6.17',)",[['6.17']]
"('brought', 'known', 'come')","[['brought', 'come', 'known']]"
"('square root', 'square', 'root', 'square root,')","[['square root', 'square', 'root'], ['square root', 'square', 'square root,'], ['root', 'square', 'square root,']]"
"('leave', 'shift', 'smaller', 'us', 'gives')","[['leave', 'shift', 'smaller', 'gives', 'us']]"
"('status', 'status flag', 'types', 'bit status')","[['types', 'status', 'status flag', 'bit status']]"
"('synplify', 'cyclone', 'ii', 'synplify pro')","[['synplify', 'synplify pro', 'cyclone', 'ii']]"
"('supports',)",[['supports']]
"('divider', 'amount', 'effecting', 'pipelining')","[['divider', 'amount', 'effecting', 'pipelining']]"
"('2100', '0.0011')","[['2100', '0.0011']]"
"('round', 'div_zero_o', '= divide,')","[['round', 'div_zero_o', '= divide,']]"
"('explain', 'describe', 'theory')","[['describe', 'explain', 'theory']]"
"('save hardware', 'save', 'root operation')","[['save hardware', 'save', 'root operation']]"
"('conversions', 'integer')","[['conversions', 'integer']]"
"('2006', 'copyright')","[['2006', 'copyright']]"
"('may', 'seen', 'explained', 'depending')","[['may', 'depending', 'seen', 'explained']]"
"('= multiply,', 'underflow_o', 'inexact')","[['= multiply,', 'underflow_o', 'inexact']]"
"('provided', 'within')","[['provided', 'within']]"
"('exponent range', 'kahan', 'doesnt', 'arithmetic', 'doesnt trigger')","[['kahan', 'arithmetic', 'exponent range', 'doesnt'], ['kahan', 'arithmetic', 'doesnt trigger'], ['doesnt', 'exponent range', 'arithmetic', 'doesnt trigger']]"
"('default', 'ieee', 'standard')","[['default', 'standard', 'ieee']]"
"('overflow_o', '= subtract,')","[['overflow_o', '= subtract,']]"
"('3.1',)",[['3.1']]
"('unbiased',)",[['unbiased']]
"('comparsion', 'fpu comparsion')","[['comparsion', 'fpu comparsion']]"
"('giving', '0.01')","[['giving', '0.01']]"
"('00000000',)",[['00000000']]
"('total', '4387')","[['total', '4387']]"
"('binary', '754', 'two', 'lets', 'steps', 'occurs')","[['754', 'binary', 'lets', 'steps', 'two', 'occurs']]"
"('compilation',)",[['compilation']]
"('division unit:',)",[['division unit:']]
"('fraca',)",[['fraca']]
"('produced', 'common', 'although')","[['produced', 'although', 'common']]"
"('implemented', 'beginning', 'successfully')","[['implemented', 'beginning', 'successfully']]"
"('starts', 'significant', 'left')","[['starts', 'significant', 'left']]"
"('iterative', 'fast', 'multipliers', 'replaced', 'implementations', 'need')","[['replaced', 'iterative', 'multipliers', 'implementations', 'fast', 'need']]"
"('11111111',)",[['11111111']]
"('post-normalization unit',)",[['post-normalization unit']]
"('multiply', 'say')","[['multiply', 'say']]"
"('3.3',)",[['3.3']]
"('101', '1.7', '17')","[['101', '1.7', '17']]"
"('project', 'discussed', 'therefore')","[['project', 'therefore', 'discussed']]"
"('exceeds', 'also', 'maximum')","[['also', 'exceeds', 'maximum']]"
"('unused', 'divide', 'zero_o')","[['unused', 'divide', 'zero_o']]"
"('fpu',)",[['fpu']]
"('infinitely', 'halfway')","[['infinitely', 'halfway']]"
"('round-to-zero',)",[['round-to-zero']]
"('shall',)",[['shall']]
"('verification',)",[['verification']]
"('following',)",[['following']]
"('wanted', 'saved')","[['wanted', 'saved']]"
"('tested', 'verified')","[['tested', 'verified']]"
